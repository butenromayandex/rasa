https://apple.stackexchange.com/questions/237430/how-to-install-specific-version-of-python-on-os-x


For Python in macOS, use pyenv:

brew install pyenv
To install a specific Python version, run:

pyenv install <version>
To select a version for every command run with the current folder:

pyenv local 3.5.0
Note that you must update PATH in your environment to find pyenv's python3 before any other:

PATH="~/.pyenv/shims:${PATH}"
With recent version of OSX(13.X) the path is moved to /etc/paths.d/ Add a file eg: pyenvpath to /etc/paths.d/pyenvpath Add the path to that file.

To list available versions:

pyenv versions













==================================================================================================
https://ericsysmin.com/2024/02/05/how-to-install-pyenv-on-macos/

1. Update Brew and install prerequisites
We will need to update brew.
brew update
In some cases when installing Python >=3.12.1 we will need ncurses. If it’s missing you can install using:

brew install ncurses
2. Install Pyenv using brew
The recommended way to install pyenv on MacOS is brew.

brew install pyenv
3. Brew doctor fix
If you want to avoid brew doctor warning about “config” scripts existing outside the system or Homebrew directories please include the following in your shell.

alias brew='env PATH="${PATH//$(pyenv root)\/shims:/}" brew'
4. Configure your Zsh profile.
echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.zshrc
echo '[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.zshrc
echo 'eval "$(pyenv init -)"' >> ~/.zshrc
If you wish to use Pyenv in non-interactive shells, add the following:

echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.zprofile
echo '[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/. zprofile
echo 'eval "$(pyenv init -)"' >> ~/.zprofile

5. Restart shell
exec "$SHELL"
6. Install python 3.12
I am going to show how to install python 3.12 but you can select any version of your choice.

pyenv install 3.12
7. Switch between your python versions
pyenv shell <version> – modifies python for the current shell session

pyenv local <version> – modifies the python used in the current directory (or subdirectories)

pyenv global <version> – modifies the python used for your user account